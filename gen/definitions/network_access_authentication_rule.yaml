---
name: Network Access Authentication Rule
rest_endpoint: /api/v1/policy/network-access/policy-set/%v/authentication
id_path: response.rule.id
doc_category: Policy
attributes:
  - tf_name: policy_set_id
    type: String
    reference: true
    description: Policy set ID
    example: d82952cb-b901-4b09-b363-5ebf39bdbaf9
    test_value: ise_network_access_policy_set.test.id
  - model_name: name
    data_path: [rule]
    type: String
    mandatory: true
    description: Rule name, [Valid characters are alphanumerics, underscore, hyphen, space, period, parentheses]
    example: Rule1
  - model_name: default
    data_path: [rule]
    type: Bool
    description: Indicates if this rule is the default one
    example: false
  - model_name: rank
    data_path: [rule]
    type: Int64
    description: The rank (priority) in relation to other rules. Lower rank is higher priority.
    example: 0
  - model_name: state
    data_path: [rule]
    type: String
    enum_values: [disabled, enabled, monitor]
    description: The state that the rule is in. A disabled rule cannot be matched.
    example: enabled
  - model_name: conditionType
    data_path: [rule, condition]
    type: String
    enum_values: [ConditionAndBlock, ConditionAttributes, ConditionOrBlock, ConditionReference]
    description: Indicates whether the record is the condition itself or a logical aggregation. Logical aggreation indicates that additional conditions are present under the children attribute.
    example: ConditionAttributes
    minimum_test_value: '"ConditionReference"'
  - model_name: id
    data_path: [rule, condition]
    tf_name: condition_id
    type: String
    description: UUID for condition
    example: 12345678-f0e7-456b-a2d1-876543320123
    exclude_test: true
    minimum_test_value: ise_network_access_condition.test.id
  - model_name: isNegate
    data_path: [rule, condition]
    tf_name: condition_is_negate
    type: Bool
    description: Indicates whereas this condition is in negate mode
    example: false
  - model_name: attributeName
    data_path: [rule, condition]
    tf_name: condition_attribute_name
    type: String
    description: Dictionary attribute name
    example: Location
  - model_name: attributeValue
    data_path: [rule, condition]
    tf_name: condition_attribute_value
    type: String
    description: Attribute value for condition. Value type is specified in dictionary object. 
    example: All Locations
  - model_name: dictionaryName
    data_path: [rule, condition]
    tf_name: condition_dictionary_name
    type: String
    description: Dictionary name
    example: DEVICE
  - model_name: dictionaryValue
    data_path: [rule, condition]
    tf_name: condition_dictionary_value
    type: String
    description: Dictionary value
    example: abc
    exclude_test: true
  - model_name: operator
    data_path: [rule, condition]
    tf_name: condition_operator
    type: String
    enum_values: [contains, endsWith, equals, greaterOrEquals, greaterThan, in, ipEquals, ipGreaterThan, ipLessThan, ipNotEquals, lessOrEquals, lessThan, matches, notContains, notEndsWith, notEquals, notIn, notStartsWith, startsWith]
    description: Equality operator
    example: equals
  - model_name: children
    type: List
    description: List of child conditions. `condition_type` must be one of `ConditionAndBlock`, `ConditionOrBlock`, `ConditionAttributes` or `ConditionReference`.
    exclude_test: true
    data_path: [rule, condition] 
    attributes:
      - model_name: conditionType
        mandatory: true
        type: String
        enum_values: [ConditionAndBlock, ConditionAttributes, ConditionOrBlock, ConditionReference]
        description: Indicates whether the record is the condition itself or a logical aggregation. Logical aggreation indicates that additional conditions are present under the children attribute.
        example: ConditionAttributes
      - model_name: id
        tf_name: condition_id
        type: String
        description: UUID for condition
        example: 12345678-f0e7-456b-a2d1-876543320123
      - model_name: isNegate
        tf_name: condition_is_negate
        type: Bool
        description: Indicates whereas this condition is in negate mode
        example: false
      - model_name: attributeName
        tf_name: condition_attribute_name
        type: String
        description: Dictionary attribute name
        example: Location
      - model_name: attributeValue
        tf_name: condition_attribute_value
        type: String
        description: Attribute value for condition. Value type is specified in dictionary object. 
        example: All Locations
      - model_name: dictionaryName
        tf_name: condition_dictionary_name
        type: String
        description: Dictionary name
        example: DEVICE
      - model_name: dictionaryValue
        tf_name: condition_dictionary_value
        type: String
        description: Dictionary value
        example: abc
      - model_name: operator
        tf_name: condition_operator
        type: String
        enum_values: [contains, endsWith, equals, greaterOrEquals, greaterThan, in, ipEquals, ipGreaterThan, ipLessThan, ipNotEquals, lessOrEquals, lessThan, matches, notContains, notEndsWith, notEquals, notIn, notStartsWith, startsWith]
        description: Equality operator
        example: equals
  - model_name: identitySourceName
    type: String
    description: Identity source name from the identity stores
    example: Internal Endpoints
  - model_name: ifAuthFail
    type: String
    enum_values: [REJECT, DROP , CONTINUE]
    mandatory: true
    description: Action to perform when authentication fails such as Bad credentials, disabled user and so on
    example: REJECT
  - model_name: ifProcessFail
    type: String
    enum_values: [REJECT, DROP , CONTINUE]
    mandatory: true
    description: Action to perform when ISE is uanble to access the identity database
    example: DROP
  - model_name: ifUserNotFound
    type: String
    enum_values: [REJECT, DROP , CONTINUE]
    mandatory: true
    description: Action to perform when user is not found in any of identity stores
    example: REJECT
test_prerequisites: |
  resource "ise_network_access_policy_set" "test" {
    name                      = "PolicySet1"
    service_name              = "Default Network Access"
    condition_type            = "ConditionAttributes"
    condition_is_negate       = false
    condition_attribute_name  = "Location"
    condition_attribute_value = "All Locations"
    condition_dictionary_name = "DEVICE"
    condition_operator        = "equals"
  }
  resource "ise_network_access_condition" "test" {
    name            = "Cond1"
    condition_type  = "LibraryConditionAttributes"
    attribute_name  = "NAS-Port-Type"
    attribute_value = "Wireless - IEEE 802.11"
    dictionary_name = "Radius"
    operator        = "equals"
  }
