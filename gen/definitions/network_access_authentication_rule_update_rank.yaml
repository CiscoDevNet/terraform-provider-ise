---
name: Network Access Authentication Rule Update Rank
# Manual update in Create function in resource file to add AuthRuleId to path
res_description:
  'This resource is used to update rank field in network access authentication rule. It serves as a workaround for the 
  ISE API/Backend limitation which restricts rank assignments to a strictly incremental sequence.
  By utilizing this resource and network_access_authentication_rule resource, you can bypass the APIs limitation.
  Creation of this resource is performing PUT operation (Update) and it only tracks rank field.
  Every time this resource is created or re-created, terr considers image activation on the device.
  (Catalyst Center does not however proceed with activation if the image is already running on the device, assuming
  the operation has succeeded and noting this fact in its audit log.)
  When this resource is destroyed, no action is performed on ISE and resource is just removed from state.'
rest_endpoint: /api/v1/policy/network-access/policy-set/%v/authentication
data_source_name_query: true
put_create: true
no_delete: true
no_import: true
no_data_source: true
ignore_delete_error: Attempted to delete default
doc_category: Network Access
test_tags: [TEST]
attributes:
  - tf_name: auth_rule_id
    type: String
    write_only: true
    mandatory: true
    id: true
    description: Authentication rule ID
    example: d82952cb-b901-4b09-b363-5ebf39bdbaf9
  - tf_name: policy_set_id
    type: String
    reference: true
    description: Policy set ID
    example: d82952cb-b901-4b09-b363-5ebf39bdbaf9
    test_value: ise_network_access_policy_set.test.id
  - model_name: name
    data_path: [rule]
    write_only: true
    type: String
    mandatory: true
    description: Rule name, [Valid characters are alphanumerics, underscore, hyphen, space, period, parentheses]
    example: Rule1
  - model_name: default
    data_path: [rule]
    write_only: true
    type: Bool
    description: Indicates if this rule is the default one
    example: false
  - model_name: rank
    data_path: [rule]
    type: Int64
    description: The rank (priority) in relation to other rules. Lower rank is higher priority.
    example: 0
  - model_name: state
    data_path: [rule]
    write_only: true
    type: String
    enum_values: [disabled, enabled, monitor]
    description: The state that the rule is in. A disabled rule cannot be matched.
    example: enabled
  - model_name: conditionType
    write_only: true
    data_path: [rule, condition]
    type: String
    enum_values:
      [
        ConditionAndBlock,
        ConditionAttributes,
        ConditionOrBlock,
        ConditionReference,
      ]
    description: Indicates whether the record is the condition itself or a logical aggregation. Logical aggreation indicates that additional conditions are present under the children attribute.
    example: ConditionAttributes
    minimum_test_value: '"ConditionReference"'
  - model_name: id
    write_only: true
    data_path: [rule, condition]
    tf_name: condition_id
    type: String
    description: UUID for condition
    example: 12345678-f0e7-456b-a2d1-876543320123
    exclude_test: true
    minimum_test_value: ise_network_access_condition.test.id
  - model_name: isNegate
    write_only: true
    data_path: [rule, condition]
    tf_name: condition_is_negate
    type: Bool
    description: Indicates whereas this condition is in negate mode
    example: false
  - model_name: attributeName
    write_only: true
    data_path: [rule, condition]
    tf_name: condition_attribute_name
    type: String
    description: Dictionary attribute name
    example: Location
  - model_name: attributeValue
    write_only: true
    data_path: [rule, condition]
    tf_name: condition_attribute_value
    type: String
    description: Attribute value for condition. Value type is specified in dictionary object.
    example: All Locations
  - model_name: dictionaryName
    write_only: true
    data_path: [rule, condition]
    tf_name: condition_dictionary_name
    type: String
    description: Dictionary name
    example: DEVICE
  - model_name: dictionaryValue
    write_only: true
    data_path: [rule, condition]
    tf_name: condition_dictionary_value
    type: String
    description: Dictionary value
    example: abc
    exclude_test: true
  - model_name: operator
    write_only: true
    data_path: [rule, condition]
    tf_name: condition_operator
    type: String
    enum_values:
      [
        contains,
        endsWith,
        equals,
        greaterOrEquals,
        greaterThan,
        in,
        ipEquals,
        ipGreaterThan,
        ipLessThan,
        ipNotEquals,
        lessOrEquals,
        lessThan,
        matches,
        notContains,
        notEndsWith,
        notEquals,
        notIn,
        notStartsWith,
        startsWith,
      ]
    description: Equality operator
    example: equals
  - model_name: children
    write_only: true
    type: List
    description: List of child conditions. `condition_type` must be one of `ConditionAndBlock` or `ConditionOrBlock`.
    exclude_test: true
    data_path: [rule, condition]
    attributes:
      - model_name: conditionType
        mandatory: true
        type: String
        enum_values:
          [
            ConditionAndBlock,
            ConditionAttributes,
            ConditionOrBlock,
            ConditionReference,
          ]
        description: Indicates whether the record is the condition itself or a logical aggregation. Logical aggreation indicates that additional conditions are present under the children attribute.
        example: ConditionAttributes
      - model_name: id
        type: String
        description: UUID for condition
        example: 12345678-f0e7-456b-a2d1-876543320123
      - model_name: isNegate
        type: Bool
        description: Indicates whereas this condition is in negate mode
        example: false
      - model_name: attributeName
        type: String
        description: Dictionary attribute name
        example: Location
      - model_name: attributeValue
        type: String
        description: Attribute value for condition. Value type is specified in dictionary object.
        example: All Locations
      - model_name: dictionaryName
        type: String
        description: Dictionary name
        example: DEVICE
      - model_name: dictionaryValue
        type: String
        description: Dictionary value
        example: abc
      - model_name: operator
        type: String
        enum_values:
          [
            contains,
            endsWith,
            equals,
            greaterOrEquals,
            greaterThan,
            in,
            ipEquals,
            ipGreaterThan,
            ipLessThan,
            ipNotEquals,
            lessOrEquals,
            lessThan,
            matches,
            notContains,
            notEndsWith,
            notEquals,
            notIn,
            notStartsWith,
            startsWith,
          ]
        description: Equality operator
        example: equals
      - model_name: children
        type: List
        description: List of child conditions. `condition_type` must be one of `ConditionAndBlock` or `ConditionOrBlock`.
        attributes:
          - model_name: conditionType
            mandatory: true
            type: String
            enum_values:
              [
                ConditionAttributes,
                ConditionReference,
              ]
            description: Condition type.
            example: ConditionAttributes
          - model_name: id
            type: String
            description: UUID for condition
            example: 12345678-f0e7-456b-a2d1-876543320123
          - model_name: isNegate
            type: Bool
            description: Indicates whereas this condition is in negate mode
            example: false
          - model_name: attributeName
            type: String
            description: Dictionary attribute name
            example: Location
          - model_name: attributeValue
            type: String
            description: Attribute value for condition. Value type is specified in dictionary object.
            example: All Locations
          - model_name: dictionaryName
            type: String
            description: Dictionary name
            example: DEVICE
          - model_name: dictionaryValue
            type: String
            description: Dictionary value
            example: abc
          - model_name: operator
            type: String
            enum_values:
              [
                contains,
                endsWith,
                equals,
                greaterOrEquals,
                greaterThan,
                in,
                ipEquals,
                ipGreaterThan,
                ipLessThan,
                ipNotEquals,
                lessOrEquals,
                lessThan,
                matches,
                notContains,
                notEndsWith,
                notEquals,
                notIn,
                notStartsWith,
                startsWith,
              ]
            description: Equality operator
            example: equals
  - model_name: identitySourceName
    write_only: true
    type: String
    description: Identity source name from the identity stores
    example: Internal Endpoints
  - model_name: ifAuthFail
    write_only: true
    type: String
    enum_values: [REJECT, DROP, CONTINUE]
    mandatory: true
    description: Action to perform when authentication fails such as Bad credentials, disabled user and so on
    example: REJECT
  - model_name: ifProcessFail
    write_only: true
    type: String
    enum_values: [REJECT, DROP, CONTINUE]
    mandatory: true
    description: Action to perform when ISE is uanble to access the identity database
    example: DROP
  - model_name: ifUserNotFound
    write_only: true
    type: String
    enum_values: [REJECT, DROP, CONTINUE]
    mandatory: true
    description: Action to perform when user is not found in any of identity stores
    example: REJECT

test_prerequisites: |
  resource "ise_network_access_policy_set" "test" {
    name                      = "PolicySet1"
    service_name              = "Default Network Access"
    condition_type            = "ConditionAttributes"
    condition_is_negate       = false
    condition_attribute_name  = "Location"
    condition_attribute_value = "All Locations"
    condition_dictionary_name = "DEVICE"
    condition_operator        = "equals"
  }
  resource "ise_network_access_condition" "test" {
    name            = "Cond1"
    condition_type  = "LibraryConditionAttributes"
    attribute_name  = "NAS-Port-Type"
    attribute_value = "Wireless - IEEE 802.11"
    dictionary_name = "Radius"
    operator        = "equals"
  }
